#+TITLE: A Unified Kinetic Model of Ribosome Collision Stimulated Quality Control in Eukaryotes

Heungwon Park  & Arvind R. Subramaniam

[[http://rasilab.fredhutch.org/]]

This repository contains code and instructions for running simulations, analyzing data, and generating the figures in the manuscript.

** Contents                                                          :toc_3:
  - [[#modeling][Modeling]]
    - [[#default-run][Default Run]]
    - [[#parameter-sweep][Parameter Sweep]]
  - [[#data-analysis][Data Analysis]]
    - [[#high-throughput-sequencing][High-Throughput Sequencing]]
    - [[#flow-cytometry][Flow Cytometry]]

** Modeling

*** Default Run

To run the simulations, install our lab's customized versions of:
- [[https://www.ncbi.nlm.nih.gov/pubmed/23423320][PySB]]: https://github.com/rasilab/PySB
- [[https://www.ncbi.nlm.nih.gov/pubmed/27402907][BioNetGen]]: https://github.com/rasilab/BioNetGen
- [[https://www.ncbi.nlm.nih.gov/pubmed/21186362][NFsim]]: https://github.com/rasilab/NFsim

The instructions for installing the above software are provided in the respective links.

Our kinetic model for quality control during eukaryotic translation is defined in [[file:modeling/tasep.py]]. 
This model is defined using the [[http://pysb.org/][PySB]] syntax.
To simulate this model with its default parameters, run:
#+BEGIN_SRC sh :exports code
cd modeling
python tasep.py
#+END_SRC

The above run displays the following output:
#+BEGIN_SRC 
BioNetGen version 2.4.0
Reading from file ./tasep.bngl (level 0)
Read 31 parameters.
Read 5 molecule types.
Read 7 observable(s).
Read 2 species.
Read 8402 reaction rule(s).
WARNING: writeFile(): Overwriting existing file ./tasep.xml.
Wrote model in xml format to ./tasep.xml.
Finished processing file ./tasep.bngl.
CPU TIME: total 74.72 s.
NFsim -xml ./tasep.xml -sim 100000 -oSteps 10 -seed 111 -o ./tasep.gdat -rxnlog ./tasep.rxns.tsv -utl 3 -gml 1000000 -maxcputime 6000 -connect
# starting NFsim v1.11...
# seeding random number generator with: 111
# reading xml file (./tasep.xml)
-------]
# preparing simulation...
Connectivity inferred for 1000 reactions.
Connectivity inferred for 2000 reactions.
Connectivity inferred for 3000 reactions.
Connectivity inferred for 4000 reactions.
Connectivity inferred for 5000 reactions.
Connectivity inferred for 6000 reactions.
Connectivity inferred for 7000 reactions.
Connectivity inferred for 8000 reactions.
# equilibrating for :0s.
# simulating system for: 1.000000e+05 second(s).

Sim time: 0.000000e+00	CPU time (total): 3.330000e-04s	 events (step): 0
Sim time: 1.000000e+04	CPU time (total): 1.194367e+02s	 events (step): 976356
Sim time: 2.000000e+04	CPU time (total): 2.274126e+02s	 events (step): 787224
Sim time: 3.000000e+04	CPU time (total): 2.795730e+02s	 events (step): 429620
Sim time: 4.000000e+04	CPU time (total): 3.434378e+02s	 events (step): 446252
Sim time: 5.000000e+04	CPU time (total): 4.125380e+02s	 events (step): 552178
Sim time: 6.000000e+04	CPU time (total): 5.400679e+02s	 events (step): 928650
Sim time: 7.000000e+04	CPU time (total): 6.394025e+02s	 events (step): 763216
Sim time: 8.000000e+04	CPU time (total): 7.081266e+02s	 events (step): 527655
Sim time: 9.000000e+04	CPU time (total): 8.037636e+02s	 events (step): 734622
Sim time: 1.000000e+05	CPU time (total): 8.943492e+02s	 events (step): 682986

# simulated 6828760 reactions in 8.943500e+02s
# 7.635445e+03 reactions/sec, 1.309681e-04 CPU seconds/event
# null events: 0 1.309681e-04 CPU seconds/non-null event
# done.  Total CPU time: 1012.13s

#+END_SRC

CPU times will be a bit different depending on the machine.

At the end of the run, =tasep.params.tsv.gz=, =tasep.gdat=, and =tasep.rxns.tsv= files should be present in the [[file:modeling/]] folder.

*** Parameter Sweep

Simulations with systematic variation of parameters are run from the 9 sub-directories in [[file:modeling/simulation_runs/]].
Each of these sub-directories contains a [[https://snakemake.readthedocs.io/en/stable/][Snakemake]] workflow that chooses the parameters, runs the simulations, tabulates the summary data, and generates figures.
Below, we describe this workflow using a specific example in the [[file:modeling/simulation_runs/endocleave_rate_vary/]] sub-directory.
All other sub-directories contain a very similar workflow.

For the set of 60 simulations in [[file:modeling/simulation_runs/endocleave_rate_vary/]], the endonucleolytic mRNA cleavage rate in the collision-stimulated endonucleolytic cleavage model is systematically varied.
The parameters that are varied from their default values are chosen in [[file:modeling/simulation_runs/endocleave_rate_vary/choose_simulation_parameters.py]] and written as a tab-separated file [[file:modeling/simulation_runs/endocleave_rate_vary/sim.params.tsv]] in the same directory.
The script [[file:modeling/simulation_runs/endocleave_rate_vary/run_simulation.py]] runs the simulation with a single parameter set. 
This parameter set is decided by the single argument to this script which specifies the row number in [[file:modeling/simulation_runs/endocleave_rate_vary/sim.params.tsv]].
The script [[file:modeling/simulation_runs/endocleave_rate_vary/run_simulation.py]] invokes [[file:modeling/get_mrna_lifetime_and_psr.R]] to parse the raw reaction firing data and calculates the mean and standard deviation of four observables: protein synthesis rate, mRNA lifetime, ribosome collision frequency, and abortive termination frequency for each mRNA during its lifetime.
These summary statistics are tabulated for all parameter combinations using the script [[file:modeling/combine_lifetime_and_psr_data.R]] which generates the =tsv= files in [[file:modeling/simulation_runs/endocleave_rate_vary/tables/]].
The tabulated summary statistics are analyzed and plotted in the [[https://r4ds.had.co.nz/r-markdown.html][RMarkdown]] script [[file:modeling/simulation_runs/endocleave_rate_vary/analyze_results.Rmd]], which when knitted, results in the Github-flavored Markdown file [[file:modeling/simulation_runs/endocleave_rate_vary/analyze_results.md]]  and the figures in [[file:modeling/simulation_runs/endocleave_rate_vary/figures/]].

[[file:modeling/simulation_runs/endocleave_rate_vary/Snakefile]] implements the above described workflow. 
Simulations are often run on a cluster using the cluster configuration [[file:modeling/simulation_runs/endocleave_rate_vary/cluster.yaml]].

To invoke the above workflow, run:
#+BEGIN_SRC sh :exports code
cd modeling/simulation_runs/endocleave_rate_vary
# check what will be run using a dry run
snakemake -np
# run everything locally; can take a very long time!!
snakemake
# use a SLURM cluster for running simulations
sh submit_cluster.sh > submit.log 2> submit.log &
#+END_SRC

All the simulations in this work (997 distinct parameter combinations) can be run in a single workflow using [[file:modeling/Snakefile]], but this is not typically recommended unless you are re-running only a few simulations.

- [[file:modeling/simulation_runs/network_flag_effect/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/network_flag_effect/figures/cputime_per_simulation_time.pdf][S1A]], [[file:modeling/simulation_runs/network_flag_effect/figures/n_proteins_vs_simulation_time.pdf][S1B]].
- [[file:modeling/simulation_runs/tasep_with_canonical_decay/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/tasep_with_canonical_decay/figures/protein_per_mrna_vs_initiation_rate.pdf][S1C]].
- [[file:modeling/simulation_runs/deadenylation_vary_num_steps/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/deadenylation_vary_num_steps/figures/mrna_lifetime_vs_l_polya.pdf][S1D]].
- [[file:modeling/simulation_runs/preterm_compare_models/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/preterm_compare_models/figures/psr_all_models_medium_stall_medium_pretermintact.pdf][2C]], [[file:modeling/simulation_runs/preterm_compare_models/figures/psr_tj_model_vary_stall_strength.pdf][S2A]], [[file:modeling/simulation_runs/preterm_compare_models/figures/psr_sat_model_vary_stall_rate.pdf][S2B]], [[file:modeling/simulation_runs/preterm_compare_models/figures/psr_sat_model_vary_abort_rate.pdf][S2C]], [[file:modeling/simulation_runs/preterm_compare_models/figures/psr_csat_model_vary_stall_rate.pdf][S2D]], [[file:modeling/simulation_runs/preterm_compare_models/figures/collision_rate_vs_initiation_rate.pdf][4A top panel]], [[file:modeling/simulation_runs/preterm_compare_models/figures/collision_rate_vs_initiation_rate_log_scale.pdf][4A top panel inset]].
- [[file:modeling/simulation_runs/csat_model_vary_num_stalls/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/csat_model_vary_num_stalls/figures/psr_csat_effect_of_num_stalls.pdf][2D]].
- [[file:modeling/simulation_runs/mrna_endocleave_compare_models/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/mrna_endocleave_compare_models/figures/mrna_lifetime_vs_initiation_rate.pdf][3C]], [[file:modeling/simulation_runs/mrna_endocleave_compare_models/figures/psr_vs_initiation_rate.pdf][3D]], [[file:modeling/simulation_runs/mrna_endocleave_compare_models/figures/psr_vs_initiation_rate_vary_cleave_rate.pdf][S3A]], [[file:modeling/simulation_runs/mrna_endocleave_compare_models/figures/collision_rate_vs_initiation_rate.pdf][4A bottom panel]], [[file:modeling/simulation_runs/mrna_endocleave_compare_models/figures/collision_rate_vs_initiation_rate_log_scale.pdf][4A bottom panel inset]].
- [[file:modeling/simulation_runs/csec_model_vary_num_stalls/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/csec_model_vary_num_stalls/figures/psr_vs_initiation_rate_vary_n_stalls.pdf][S3B]].
- [[file:modeling/simulation_runs/preterm_rate_vary/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/preterm_rate_vary/figures/psr_vs_abortive_termination_rate.pdf][4B]].
- [[file:modeling/simulation_runs/endocleave_rate_vary/Snakefile]] workflow generates Fig. [[file:modeling/simulation_runs/endocleave_rate_vary/figures/mrna_lifetime_vs_cleavage_rate.pdf][4C]].
 
** Data Analysis

*** High-Throughput Sequencing
[[file:data/htseq/]] contains the annotations for the reporter and Illumina multiplexing barcodes used for measuring mRNA levels:

- [[file:data/htseq/barcode_annotations.tsv]] contains the 8nt barcodes inserted into the 3′UTR along with a unique plate and well number for each barcode.
- [[file:data/htseq/strain_barcode_annotations.tsv]] contains the plate + well number of the 8nt barcode and the corresponding reporter plasmid listed in Table S1 of the manuscript.
- [[file:data/htseq/strain_annotations.tsv]] contains the initiation and codon mutations in each reporter plasmid that barcoded, and is similar to Table S1 of the manuscript.
- [[file:data/htseq/r2_barcode_annotations.tsv]] contains the Illumina multiplexing barcodes and the corresponding the strain background and whether the library is prepared from cDNA or gDNA.

Raw sequencing data in =.fastq= format must be downloaded to the [[file:data/htseq/]] folder, and will be made accessible from GEO.

The number of Illumina sequencing reads aligning to each barcode in each sample is counted using [[file:analysis/htseq/count_barcodes.py]].
These counts are available as =.tsv= files in [[file:analysis/htseq/tables/]].

The tabulated counts are processed and plotted in [[file:analysis/htseq/analyze_barcode_counts.Rmd]] to generate Fig. [[file:analysis/htseq/figures/mrna_level_wt_pgk1_no_insert.pdf][6B]], [[file:analysis/htseq/figures/mrna_level_wt_4_codons.pdf][6C]], and [[file:analysis/htseq/figures/mrna_level_ko_2_codons.pdf][7C]] in the manuscript.
The knitted code and figures from this analysis can be browsed at [[file:analysis/htseq/analyze_barcode_counts.md]].

The above steps are implemented as a =Snakemake= workflow in [[file:analysis/htseq/Snakefile]]. 
The workflow can be run locally or on a SLURM cluster by:
#+BEGIN_SRC sh :exports code
cd analysis/htseq
# local run
snakemake
# cluster run
sh submit_cluster.sh > submit.log 2> submit.log &
#+END_SRC

This workflow can be visualized by:
#+BEGIN_SRC sh :exports code
snakemake --forceall -dag | dot -Tpng -o dag.png
#+END_SRC
which produces the following graph:
[[file:analysis/htseq/dag.png]]

This workflow generates Fig. [[file:analysis/htseq/figures/mrna_level_wt_pgk1_no_insert.pdf][6B]], [[file:analysis/htseq/figures/mrna_level_wt_4_codons.pdf][6C]], [[file:analysis/htseq/figures/mrna_level_ko_2_codons.pdf][7B]], and [[file:analysis/htseq/figures/mrna_level_ko_2_codons.pdf][S5B]].

*** Flow Cytometry

[[file:data/flow/]] contains the annotations for the 8 flow cytometry experiments in our work.

[[file:analysis/flow/]] contains the RMarkdown scripts for generating figures from the raw data and annotations.

The RMarkdown scripts can be knitted to generate the figures by:

#+BEGIN_SRC sh :exports code
cd analysis/flow
for file in *.Rmd; do R -e "rmarkdown::render('$file')"; done
#+END_SRC

- [[file:analysis/flow/no_insert.md]] generates Fig. [[file:analysis/flow/figures/no_insert.pdf][5B]].
- [[file:analysis/flow/10xaag_wt.md]], [[file:analysis/flow/8xccg_wt.md]], and [[file:analysis/flow/cgg_position_number.md]] generate Fig. [[file:analysis/flow/figures/10xaag_wt.pdf][5C left panels]], [[file:analysis/flow/figures/8xccg_wt.pdf][5C middle panels]], and [[file:analysis/flow/figures/5xcgg_wt.pdf][5C right panels]] respectively.
- [[file:analysis/flow/cgg_position_number.md]] generates Fig. [[file:analysis/flow/figures/stall_position_pgk1_cgg.pdf][S4B]].
- [[file:analysis/flow/lowmedhigh_8xcgg_4ko.md]] generates Fig. [[file:analysis/flow/figures/lowmedhigh_ccg_4ko_wt.pdf][7A]].
- [[file:analysis/flow/hel2_asc1_mutants.md]] generates Fig. [[file:analysis/flow/figures/hel2_rescue.pdf][7C top panels]] and [[file:analysis/flow/figures/asc1_rescue.pdf][7C bottom panels]]. Note: The mKate2 channel measurement did not work properly in this experiment. Hence the YFP fluorescence is not normalized by mKate2 fluorescence in these figures.
- [[file:analysis/flow/5xcgg_3ko.md]] and [[file:analysis/flow/5xcgg_asc1ko.md]] generate Fig. [[file:analysis/flow/figures/5xcgg_3ko.pdf][S5A left two panels]] and [[file:analysis/flow/figures/5xcgg_asc1ko.pdf][S5A right panels]]. Note: The measurement in the /ΔASC1/ strain background was very noisy due to poor growth in the first experiment. So this measurement was repeated with longer growth times and inoculation with larger /S. cerevisiae/ colonies.

